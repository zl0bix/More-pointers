#include<iostream>

int main() {
	setlocale(LC_ALL, "rus");
	int n,m;
	//—оздание нейтрального указател€
	/*
	//—оздание нейтрального указател€ способ 1
	int *pn1=0;
	if (pn1 != 0)
		std::cout << *pn1 << std::endl;
	else
		std::cout << "”казатель не инициализирован\n";

	//—пособ 2
	int* pn2 = NULL;
	if (pn2 != NULL)
		std::cout << *pn2 << std::endl;
	else
		std::cout << "”казатель не инициализирован\n";

	//—пособ 3(основной способ)
	int* pn3 = nullptr;
	if(pn3!=0)
		std::cout << *pn3 << std::endl;
	else
		std::cout << "”казатель не инициализирован\n";
		*/
	//ћодификации указателей(виды)
	n = 10; m = 20;
	
	//”казатель на константу - может быть объ€влен без инициализации и может быть перенаправлен на 
	//другую область пам€ти, но с его помощью Ќ≈Ћ№«я мен€ть значение пам€ти, на которую он направлен
	
	const int *mp1;
	mp1 = &n;
	mp1 = &m;
	// *mp1 = 30;//ќшибка
	std::cout << *mp1 << std::endl;
	
	//”казатель - константа или константный указатель
	//ƒолжен быть инициализирован при объ€влении и не может быть перенаправлен в другую область пам€ти, других ограничений нет
	
	int *const mp2=&n;
	// mp2 = &m;//Error!!!
	*mp2 = 15;
	std::cout << *mp2 << std::endl;

	// онстантный указатель на константу
	//Ќе может быть объ€влен без инициализации и не может быть перенаправлен на другую область пам€ти 
	//с его помощью нельз€ мен€ть значени€ переменной на которую он направлен
	
	const int* const mp3 = &n;// всЄ запрещено 
	std::cout << *mp3 << std::endl;

	return 0;
}